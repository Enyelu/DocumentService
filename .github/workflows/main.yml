name: Deploy to Dev

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: dev
      AWS_ACCOUNT_ID: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.DEV_AWS_REGION }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}

      - name: Restore and build .NET projects
        run: |
          dotnet restore
          dotnet build --no-restore

      - name: Publish Lambda Function
        run: |
          dotnet publish ./FunctionAppLogic/FunctionAppLogic.csproj -c Release -o ./src/FunctionAppLogic/bin/Release/net8.0/publish
          
      - name: Move Docker function to src folder
        run: |
          mkdir -p ./src
          mv ./FunctionAppLogicDocker ./src/FunctionAppLogicDocker


      - name: Deploy CDK Stack
        run: |
          cdk deploy --all --require-approval never \
            --app "dotnet run --project ./MyCdkApp/MyCdkApp.csproj" \
            --context env=${{ env.DEPLOY_ENV }} \
            --context account=${{ env.AWS_ACCOUNT_ID }} \
            --context region=${{ env.AWS_REGION }}
